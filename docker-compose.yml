version: '3.8'

services:
    # Next.js Application
    nextjs-app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: wedding-nextjs-app
        ports:
            - '3000:3000'
        environment:
            - DB_HOST=mysql-db
            - DB_USER=root
            - DB_PASS=password123
            - DB_NAME=db_wedding
            - DATABASE_URL=mysql://root:password123@mysql-db:3306/db_wedding
            - NEXTAUTH_SECRET=ZizmJC4HFlrIHKWXBiqNQhe1LSkHK0IX+1pO51BNt7k=
            - NEXTAUTH_URL=http://localhost:3000
            - NODE_ENV=production
        depends_on:
            mysql-db:
                condition: service_healthy
        networks:
            - wedding-network
        restart: unless-stopped

    # MySQL Database
    mysql-db:
        image: mysql:8.0
        container_name: wedding-mysql-db
        ports:
            - '3307:3306' # Port 3307 eksternal agar tidak bentrok dengan XAMPP
        environment:
            MYSQL_ROOT_PASSWORD: password123
            MYSQL_DATABASE: db_wedding
            MYSQL_USER: wedding_user
            MYSQL_PASSWORD: password123
        volumes:
            - mysql_wedding_data:/var/lib/mysql
            - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
            - ./database/backup:/docker-entrypoint-initdb.d/backup:ro
        networks:
            - wedding-network
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
            timeout: 20s
            retries: 10
        restart: unless-stopped

    # phpMyAdmin
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: wedding-phpmyadmin
        ports:
            - '8080:80'
        environment:
            PMA_HOST: mysql-db
            MYSQL_ROOT_PASSWORD: password123
        depends_on:
            - mysql-db
        networks:
            - wedding-network
        restart: unless-stopped

volumes:
    mysql_wedding_data:

networks:
    wedding-network:
        driver: bridge
